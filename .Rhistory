"Lowland_Low_Birch.Willow_Shrub",
"Lowland_Water",
"Lowland_Wet_Sedge_Tundra",
"Upland_Birch.Aspen.Spruce_Forest",
"Upland_Dryas_Dwarf_Shrub_Tundra",
"Upland_Low_Birch.Willow_Shrub_Tundra",
"Upland_Moist_Sedge_Shrub",
"Upland_Shrubby_Tussock_Tundra",
"Riverine_Water_Shrub_Wet_Sedge_Barrens"
))
df <- subset(df_total, select = c(
"Acetate",
"Br",
"Cl",
"Co",
"F",
"S",
"DOC",
"Al",
"B",
"Ba",
"Ca",
"Cd",
"Cr",
"Cu",
"Fe",
"K",
"Li",
"Mg",
"Mn",
"Mo",
"Na",
"Ni",
"Pb",
"Zn",
"Ammonium",
"Nitrite",
"Sulfate",
"Phosphate",
"Formate",
"TDN",
"As",
"Se",
"Si",
"Sr",
"Ti",
"V",
"P",
"po4",
"PP",
"SRP",
"TDP",
"Season",
"area_km2",
"SL_60_MEAN",
"SP_1000_MEAN",
"NDVI2012_MEAN",
"Alpine_Non.Carbonate_Barrens",
"Alpine_Non.Carbonate_Dryas_Dwarf_Shrub",
"Lowland_Low_Birch.Willow_Shrub",
"Lowland_Water",
"Lowland_Wet_Sedge_Tundra",
"Upland_Birch.Aspen.Spruce_Forest",
"Upland_Dryas_Dwarf_Shrub_Tundra",
"Upland_Low_Birch.Willow_Shrub_Tundra",
"Upland_Moist_Sedge_Shrub",
"Upland_Shrubby_Tussock_Tundra",
"Riverine_Water_Shrub_Wet_Sedge_Barrens"
))
df <- subset(df_total, select = c(
"Acetate",
"Br",
"Cl",
"Co",
"F",
"S",
"DOC",
"Al",
"B",
"Ba",
"Ca",
"Cd",
"Cr",
"Cu",
"Fe",
"K",
"Li",
"Mg",
"Mn",
"Mo",
"Na",
"Ni",
"Pb",
"Zn",
"Ammonium",
"Nitrite",
"Sulfate",
"Phosphate",
"Formate",
"TDN",
"As",
"Se",
"Si",
"Sr",
"Ti",
"V",
"P",
"PP",
"SRP",
"TDP",
"Season",
"area_km2",
"SL_60_MEAN",
"SP_1000_MEAN",
"NDVI2012_MEAN",
"Alpine_Non.Carbonate_Barrens",
"Alpine_Non.Carbonate_Dryas_Dwarf_Shrub",
"Lowland_Low_Birch.Willow_Shrub",
"Lowland_Water",
"Lowland_Wet_Sedge_Tundra",
"Upland_Birch.Aspen.Spruce_Forest",
"Upland_Dryas_Dwarf_Shrub_Tundra",
"Upland_Low_Birch.Willow_Shrub_Tundra",
"Upland_Moist_Sedge_Shrub",
"Upland_Shrubby_Tussock_Tundra",
"Riverine_Water_Shrub_Wet_Sedge_Barrens"
))
df_total <- merge(df_chem, df_characteristics, by="Site.ID")
write.csv(df_total, "Merged_Dataset.csv")
# Clean Data (column names + remove useless columns)
for ( col in 1:ncol(df_total)) {
colnames(df_total)[col] <- sub("\\.\\..*", "", colnames(df_total)[col])
}
df <- subset(df_total, select = c(
"Acetate",
"Br",
"Cl",
"Co",
"F",
"S",
"DOC",
"Al",
"B",
"Ba",
"Ca",
"Cd",
"Cr",
"Cu",
"Fe",
"K",
"Li",
"Mg",
"Mn",
"Mo",
"Na",
"Ni",
"Pb",
"Zn",
"Ammonium",
"Nitrite",
"Sulfate",
"Phosphate",
"Formate",
"TDN",
"As",
"Se",
"Si",
"Sr",
"Ti",
"V",
"P",
"PP",
"SRP",
"TDP",
"Season",
"area_km2",
"SL_60_MEAN",
"SP_1000_MEAN",
"NDVI2012_MEAN",
"Alpine_Non.Carbonate_Barrens",
"Alpine_Non.Carbonate_Dryas_Dwarf_Shrub",
"Lowland_Low_Birch.Willow_Shrub",
"Lowland_Water",
"Lowland_Wet_Sedge_Tundra",
"Upland_Birch.Aspen.Spruce_Forest",
"Upland_Dryas_Dwarf_Shrub_Tundra",
"Upland_Low_Birch.Willow_Shrub_Tundra",
"Upland_Moist_Sedge_Shrub",
"Upland_Shrubby_Tussock_Tundra",
"Riverine_Water_Shrub_Wet_Sedge_Barrens"
))
View(df)
name <- df[1]
name
name <- colnames(df)[1]
name
for ( col in 1:ncol(df)) {
results <- gbm.step(data=df, gbm.x=42:57, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results, file='BRT_results.csv')
} else {
write.table(results, file='BRT_results.csv', append=TRUE)
}
}
#Load libraries
library(dismo)
library(ggplot2)
library(dplyr)
require(gbm)
for ( col in 1:ncol(df)) {
results <- gbm.step(data=df, gbm.x=42:57, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results, file='BRT_results.csv')
} else {
write.table(results, file='BRT_results.csv', append=TRUE)
}
}
df <- subset(df_total, select = c(
"Acetate",
"Br",
"Cl",
"Co",
"F",
"S",
"DOC",
"Al",
"B",
"Ba",
"Ca",
"Cd",
"Cr",
"Cu",
"Fe",
"K",
"Li",
"Mg",
"Mn",
"Mo",
"Na",
"Ni",
"Pb",
"Zn",
"Ammonium",
"Nitrite",
"Sulfate",
"Phosphate",
"Formate",
"TDN",
"As",
"Se",
"Si",
"Sr",
"Ti",
"V",
"P",
"PP",
"SRP",
"TDP",
"Season",
"area_km2",
"SL_60_MEAN",
"SP_1000_MEAN",
"NDVI2012_MEAN",
"Alpine_Non.Carbonate_Barrens",
"Alpine_Non.Carbonate_Dryas_Dwarf_Shrub",
"Lowland_Low_Birch.Willow_Shrub",
"Lowland_Water",
"Lowland_Wet_Sedge_Tundra",
"Upland_Birch.Aspen.Spruce_Forest",
"Upland_Dryas_Dwarf_Shrub_Tundra",
"Upland_Low_Birch.Willow_Shrub_Tundra",
"Upland_Moist_Sedge_Shrub",
"Upland_Shrubby_Tussock_Tundra",
"Riverine_Water_Shrub_Wet_Sedge_Barrens"
))
# Clean Data (column names + remove useless columns)
for ( col in 1:ncol(df_total)) {
col
colnames(df_total)[col] <- sub("\\.\\..*", "", colnames(df_total)[col])
}
for ( col in 1:41) {
results <- gbm.step(data=df, gbm.x=42:57, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results, file='BRT_results.csv')
} else {
write.table(results, file='BRT_results.csv', append=TRUE)
}
}
df[41]
df5$Season[df5$Season == 'Early'] <- 0
df$Season[df5$Season == 'Early'] <- 0
df$Season[df$Season == 'Early'] <- 0
df$Season[df$Season == 'Late'] <- 1
df$Season <- as.numeric(df$Season)
for ( col in 1:41) {
results <- gbm.step(data=df, gbm.x=42:57, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results, file='BRT_results.csv')
} else {
write.table(results, file='BRT_results.csv', append=TRUE)
}
}
for ( col in 1:41) {
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results, file='BRT_results.csv')
} else {
write.table(results, file='BRT_results.csv', append=TRUE)
}
}
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
names(results)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results, file='BRT_results.csv')
} else {
write.table(results, file='BRT_results.csv', append=TRUE)
}
}
names(results)
results$cv.statistics
results$data
names(results)
results$response.name
results$contributions
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results$contributions, file='BRT_results.csv')
} else {
write.table(results$contributions, file='BRT_results.csv', append=TRUE)
}
}
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results$contributions, file='BRT_results.csv')
} else {
write.table(results$contributions, file='BRT_results.csv')
}
}
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results$contributions, file='BRT_results.csv')
} else {
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
}
names(results)
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
names(results)
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(results$contributions, file='BRT_results.csv')
} else {
write.table(results)
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
}
names(results)
results$data
names(results)
results$verbose
results$var.names
results$response.name
results$m
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col])
} else {
write.table(colnames(df)[col])
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
colnames(df)[col]
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col], file='BRT_results.csv')
} else {
write.table(colnames(df)[col], file='BRT_results', append=TRUE)
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col], file='BRT_results.csv')
} else {
write.table(colnames(df)[col], file='BRT_results.csv', append=TRUE)
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
#For Each Response variable
for ( col in 1:41) {
# Returns a GBM object
results <- gbm.step(data=df, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col], file='BRT_results.csv')
} else {
write.table(colnames(df)[col], file='BRT_results.csv', append=TRUE, sep=",")
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
#For Each Response variable
for ( col in 1:41) {
df_temp <- subset(df, subset = colnames(df)[col] > 0)
# Returns a GBM object
results <- gbm.step(data=df_temp, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.01, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col], file='BRT_results.csv')
} else {
write.table(colnames(df)[col], file='BRT_results.csv', append=TRUE, sep=",")
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
#For Each Response variable
for ( col in 1:41) {
df_temp <- subset(df, subset = colnames(df)[col] > 0)
# Returns a GBM object
results <- gbm.step(data=df_temp, gbm.x=42:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.001, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col], file='BRT_results.csv')
} else {
write.table(colnames(df)[col], file='BRT_results.csv', append=TRUE, sep=",")
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
#For Each Response variable
for ( col in 1:41) {
df_temp <- subset(df, subset = colnames(df)[col] > 0)
# Returns a GBM object
results <- gbm.step(data=df_temp, gbm.x=41:56, gbm.y=col, family="gaussian", tree.complexity=5,
learning.rate=0.001, bag.fraction=0.5)
summary(results)
gbm.plot(results)
if (col == 1) {
write.csv(colnames(df)[col], file='BRT_results.csv')
} else {
write.table(colnames(df)[col], file='BRT_results.csv', append=TRUE, sep=",")
}
write.table(results$contributions, file='BRT_results.csv', append=TRUE, sep=",")
}
